cmake_minimum_required(VERSION 3.1)
project(Reversi)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)

# Fix linker options on MinGW
if (MINGW)
	if (MINGW_STATIC_LINKAGE)
		set(LINKAGE_OPTS "-static-libgcc -static-libstdc++ -Wl,-Bstatic,--whole-archive -Wl,--exclude-symbols,_Unwind_Resume -lwinpthread -Wl,-Bdynamic,--no-whole-archive")
	elseif (MINGW_SHARED_LINKAGE)
		set(LINKAGE_OPTS "-shared-libgcc")
	else ()
		set(LINKAGE_OPTS "")
	endif ()
	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${LINKAGE_OPTS}")
	set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${LINKAGE_OPTS}")
	set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${LINKAGE_OPTS}")
endif (MINGW)

set(wxWidgets_USE_LIBS)
if (WIN32)
	if (CMAKE_BUILD_TYPE EQUAL DEBUG)
		set(wxWidgets_CONFIGURATION  mswud)
	else ()
		set(wxWidgets_CONFIGURATION  mswu)
	endif ()
else (WIN32)
	set(wxWidgets_USE_UNICODE ON)
	if (CMAKE_BUILD_TYPE EQUAL DEBUG)
		set(wxWidgets_USE_DEBUG ON)
	else ()
		set(wxWidgets_USE_DEBUG OFF)
	endif ()
endif (WIN32)
find_package(wxWidgets COMPONENTS adv core base)

if (wxWidgets_FOUND)
	include(${wxWidgets_USE_FILE})
	include_directories(${CMAKE_SOURCE_DIR}/headers)
  file(GLOB SOURCES ${CMAKE_SOURCE_DIR}/source/engine/*.cpp ${CMAKE_SOURCE_DIR}/source/frontend/*.cpp)
  message("${SOURCES}")
  add_executable(reversi ${SOURCES})
  target_link_libraries(reversi ${wxWidgets_LIBRARIES})
  if (WIN32)
 	target_link_libraries(reversi uxtheme)
  endif (WIN32)
else (wxWidgets_FOUND)
  message("wxWidgets not found")
endif (wxWidgets_FOUND)